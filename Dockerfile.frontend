# 前端 Dockerfile - 从项目根目录构建
FROM node:18-alpine AS builder

WORKDIR /app

# 复制前端 package.json 和 package-lock.json
COPY vue-frontend/package*.json ./

# 安装依赖
RUN npm ci

# 明确复制前端源代码
COPY vue-frontend/index.html .
COPY vue-frontend/src/ ./src/
COPY vue-frontend/public/ ./public/
COPY vue-frontend/vite.config.mjs .
COPY vue-frontend/tsconfig.json .
COPY vue-frontend/tsconfig.node.json .

# 设置环境变量
ENV NODE_ENV=production
ENV VITE_API_BASE_URL=${VITE_API_BASE_URL:-/api}

# 验证文件是否正确复制
RUN ls -la
RUN ls -la index.html
RUN ls -la src/

# 使用 npm script 构建
RUN npm run build

# 验证构建结果
RUN ls -la dist/ && echo "=== 构建成功 ==="

# 生产阶段
FROM nginx:alpine

# 安装 wget 用于健康检查
RUN apk add --no-cache wget

# 复制 Nginx 配置
COPY vue-frontend/nginx.zeabur.conf /etc/nginx/nginx.conf

# 复制构建结果
COPY --from=builder /app/dist /usr/share/nginx/html

# 验证文件复制
RUN ls -la /usr/share/nginx/html/ && echo "=== 文件复制成功 ==="

# 暴露端口
EXPOSE 80

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# 启动 Nginx
CMD ["nginx", "-g", "daemon off;"]
